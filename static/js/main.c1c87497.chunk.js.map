{"version":3,"sources":["assets/carriage/mockups.png","assets/carriage/carriage-logo.png","assets/carriage/retro-screen.png","assets/carriage/work.jpg","Carriage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","Carriage","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react","Menu","inverted","className","Item","Image","src","require","size","Grid","stackable","verticalAlign","Row","Column","width","Header","as","textAlign","List","href","target","Button","color","content","icon","labelPosition","Container","text","columns","Statistic","Value","Label","Divider","hidden","bulleted","fluid","style","background-color","margin-bottom","React","App","react_default","a","createElement","BrowserRouter","Switch","Route","exact","path","component","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c1c87497.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mockups.2b826cf3.png\";","module.exports = __webpack_public_path__ + \"static/media/carriage-logo.523fbdc3.png\";","module.exports = __webpack_public_path__ + \"static/media/retro-screen.0efaed59.png\";","module.exports = __webpack_public_path__ + \"static/media/work.b0777cbd.jpg\";","import * as React from 'react';\nimport { Grid, Button, Container, List, Header, Image, Menu, Divider, Statistic } from 'semantic-ui-react';\nimport './App.scss';\nimport './styles/carriage.scss';\n\ninterface ICarriageProps {\n\n}\n\nclass Carriage extends React.PureComponent<ICarriageProps> {\n\n  public constructor(props: ICarriageProps) {\n    super(props);\n  }\n\n  public render() {\n    return (\n      <div>\n        <Menu inverted className=\"fixed-menu\">\n          <Menu.Item>\n            <Image src={require(\"./assets/carriage/carriage-logo.png\")} size=\"small\" />\n          </Menu.Item>\n        </Menu>\n        <Grid stackable verticalAlign=\"middle\" >\n          <Grid.Row className=\"mockup-bg\">\n            <Grid.Column width={10} className=\"image-container\" >\n              <Image src={require(\"./assets/carriage/mockups.png\")} size=\"massive\"\n                verticalAlign=\"middle\" />\n            </Grid.Column>\n            <Grid.Column width={6} className=\"image-container\">\n              <Header as=\"h1\" className=\"carriage-header\" textAlign=\"right\">\n                Smarter and safer paratransit built for the 21st century.\n              </Header>\n              <List className=\"text-align-right white-text\">\n                <List.Item>Rider and driver companion apps</List.Item>\n                <List.Item>Automatic ride scheduling</List.Item>\n                <List.Item>Dispatcher dashboard and service analytics</List.Item>\n              </List>\n              <List className=\"text-align-right white-text\">\n                <List.Item as=\"a\" href=\"https://www.cis.cornell.edu/boom-2019-showcasing-over-40-exciting-student-tech-projects\"\n                  target=\"_blank\" className=\"white-link\">Featured project in BOOM 2019</List.Item>\n                <List.Item as=\"a\" href=\"https://www.facebook.com/lifechanginglabs/posts/2403040376393825\"\n                  target=\"_blank\" className=\"white-link\">2019 Big Idea Competition Nonprofit Finalist</List.Item>\n              </List>\n              <p className=\"text-align-right\">\n                <Button color=\"black\" content=\"View source on GitHub\" icon=\"github\"\n                  labelPosition=\"left\" className=\"text-align-right\" as=\"a\" target=\"_blank\"\n                  href=\"https://github.com/maxmchu/carriage-web\" />\n              </p>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row className=\"row-top-padding\">\n            <Grid.Column width={16}>\n              <Container text className=\"text-align-center\">\n                <Header as=\"h1\" className=\"carriage-title\">\n                  What is paratransit? Why does it matter?\n                </Header>\n                <p className=\"carriage-content\">\n                  Paratransit consists of transportation services for people\n                  with permament or temporary mobility issues,\n                  <span className=\"blue-highlight\"> providing essential access to transportation.</span>\n                </p>\n                <p className=\"carriage-content\">\n                  Under the Americans with Disabilities Act, public transit agencies and universities\n                  <span className=\"blue-highlight\"> are required to provide paratransit service.</span>\n                </p>\n              </Container>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row columns=\"equal\" verticalAlign=\"top\" className=\"row-padding\">\n            <Grid.Column>\n              <Statistic size=\"tiny\" className=\"carriage-stat\">\n                <Statistic.Value className=\"carriage-stat-value\">36.3 million</Statistic.Value>\n                <Statistic.Label className=\"carriage-stat-label\">Americans with one or more disabilities</Statistic.Label>\n              </Statistic>\n            </Grid.Column>\n            <Grid.Column>\n              <Statistic size=\"tiny\" className=\"carriage-stat\">\n                <Statistic.Value className=\"carriage-stat-value\">11 million</Statistic.Value>\n                <Statistic.Label className=\"carriage-stat-label\">disabled Americans who have dificulty accessing transportation</Statistic.Label>\n              </Statistic>\n            </Grid.Column>\n            <Grid.Column>\n              <Statistic size=\"tiny\" className=\"carriage-stat\">\n                <Statistic.Value className=\"carriage-stat-value\">550,000+</Statistic.Value>\n                <Statistic.Label className=\"carriage-stat-label\">\n                  disabled Americans who do not leave their homes at all\n                  </Statistic.Label>\n              </Statistic>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column width={16}>\n              <Container text className=\"text-align-center\">\n                <p className=\"carriage-content\">\n                  Accessible ridesharing options aren't always\n                <span className=\"blue-highlight\"> available or affordable</span>.\n              </p>\n                <Divider hidden />\n              </Container>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row className=\"retro-bg\" verticalAlign=\"top\">\n            <Grid.Column width={8} className=\"column-lr-padding\">\n              <Header as=\"h1\" className=\"gold-text\">\n                Current paratransit tech is stuck in the 1990s.\n              </Header>\n              <List className=\"gold-text carriage-content\" bulleted>\n                <List.Item>Requests are made by phone several days in advance</List.Item>\n                <List.Item>Dispatchers manually schedule rides every morning</List.Item>\n                <List.Item>Schedules are distributed to drivers in paper</List.Item>\n              </List>\n              <Header className=\"gold-text\" as=\"h3\">\n                Delays snowball in the system, and vulnerable riders are left\n                stranded outside waiting for their drivers.\n              </Header>\n            </Grid.Column>\n            <Grid.Column width={8}>\n              <Image src={require(\"./assets/carriage/retro-screen.png\")} fluid />\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row columns=\"equal\" className=\"row-no-padding\">\n            <Grid.Column className=\"mockup-bg expand-column\" verticalAlign=\"middle\">\n              <Image src={require('./assets/carriage/mockups.png')} size=\"massive\" />\n            </Grid.Column>\n            <Grid.Column className=\"white-bg row-padding text-align-center\">\n\n              <Header as=\"h1\" className=\"blue-highlight larger-title\">\n                Introducing Carriage\n                </Header>\n              <p className=\"blue-highlight carriage-content\">\n                A 21st century solution to paratransit.\n                </p>\n              <Header as=\"h2\">\n                Driver and rider companion apps\n                </Header>\n              <p className=\"carriage-content\">\n                GPS tracking and shared contact informations provides\n                safety and accountability.\n                </p>\n              <Header as=\"h2\">\n                Automatic scheduling and service analytics\n                </Header>\n              <p className=\"carriage-content\">\n                Reduced stress, more efficient routing, and the ability to adapt\n                to changes on demand. Service analytics drive smarter service decisions.\n                </p>\n\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row columns=\"equal\" className=\"row-no-padding\">\n\n            <Grid.Column className=\"white-bg row-padding text-align-center\">\n\n              <Header as=\"h1\" className=\"larger-title\">\n                Interested in working on Carriage?\n              </Header>\n              <p className=\"carriage-content\">\n                Carriage is still under development,\n                and we need all the help we can get! Reach out to us!\n              </p>\n\n            </Grid.Column>\n            <Grid.Column className=\"expand-column remove-padding\" verticalAlign=\"middle\">\n              <Image src={require(\"./assets/carriage/work.jpg\")} size=\"massive\" verticalAlign=\"middle\" />\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row style={{ \"background-color\": \"#ecf0f1\" }}>\n            <Grid.Column width={16}>\n              <Container text textAlign=\"center\">\n                <Header as=\"h3\" content=\"Carriage\" style={{ \"margin-bottom\": 0 }} />\n                <p>\n                  Built by Max Chu and Jessica Hong, 2019\n                </p>\n              </Container>\n\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </div>\n    );\n  }\n\n}\n\nexport default Carriage;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.scss';\n\nimport Carriage from './Carriage';\n\n\nclass App extends Component {\n\n  public render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <Switch>\n            <Route exact path=\"/\" component={Carriage} />\n            <Route component={Carriage} />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}